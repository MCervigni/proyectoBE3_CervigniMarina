paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '500':
          $ref: '#/components/responses/Error'

  /api/users/{uid}:
    get:
      summary: Obtener usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
          example: "60acc54545c8e82e0475200b"
      responses:
        '200':
          description: Usuario encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: "Usuario no encontrado"
        '500':
          $ref: '#/components/responses/Error'

    put:
      summary: Actualizar usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
          example: "60acc54545c8e82e0475200b"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Nombre del usuario
                last_name:
                  type: string
                  description: Apellido del usuario
                email:
                  type: string
                  description: Correo electrónico
                password:
                  type: string
                  description: Nueva contraseña
                role:
                  type: string
                  enum: [user, admin]
                  description: Rol del usuario
              example:
                first_name: Marina
                last_name: Cervigni
                email: marina.updated@test.com
                role: admin
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/Error'

    delete:
      summary: Eliminar usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
          example: "60acc54545c8e82e0475200b"
      responses:
        '200':
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: "Usuario eliminado exitosamente"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: "Usuario no encontrado"
        '500':
          $ref: '#/components/responses/Error'