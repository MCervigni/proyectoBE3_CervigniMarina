components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado de mongo
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password:
          type: string
          description: Contraseña encriptada
        role:
          type: string
          enum: [user, admin]
          description: Rol del usuario
        pets:
          type: array
          items:
            type: string
          description: Array de IDs de mascotas
      example:
        _id: "60acc54545c8e82e0475200b"
        first_name: Marina
        last_name: Cervigni
        email: marina@test.com
        password: "$2b$10$hashedpassword"
        role: user
        pets: []

    Pet:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado de mongo
        name:
          type: string
          description: Nombre de la mascota
        specie:
          type: string
          enum: [dog, cat, bird, rabbit, hamster, fish]
          description: Especie de la mascota
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento
        adopted:
          type: boolean
          description: Estado de adopción
        owner:
          type: string
          description: ID del propietario (si está adoptada)
        image:
          type: string
          description: URL de la imagen
      example:
        _id: "60acc54545c8e82e0475300c"
        name: Luna
        specie: dog
        birthDate: "2020-05-15"
        adopted: false
        image: "https://picsum.photos/200/300"

    Adoption:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado de mongo
        owner:
          type: string
          description: ID del usuario adoptante
        pet:
          type: string
          description: ID de la mascota adoptada
      example:
        _id: "60acc54545c8e82e0475400d"
        owner: "60acc54545c8e82e0475200b"
        pet: "60acc54545c8e82e0475300c"

  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password:
          type: string
          description: Contraseña del usuario
      required:
        - first_name
        - last_name
        - email
        - password
      example:
        first_name: Marina
        last_name: Cervigni
        email: marina@test.com
        password: coder123

    createPet:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la mascota
        specie:
          type: string
          enum: [dog, cat, bird, rabbit, hamster, fish]
          description: Especie de la mascota
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento
        image:
          type: string
          description: URL de la imagen (opcional)
      required:
        - name
        - specie
        - birthDate
      example:
        name: Luna
        specie: dog
        birthDate: "2020-05-15"
        image: "https://example.com/luna.jpg"

    updateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password:
          type: string
          description: Nueva contraseña
        role:
          type: string
          enum: [user, admin]
          description: Rol del usuario
      example:
        first_name: Marina
        last_name: Cervigni
        email: marina.updated@test.com
        role: admin

    generateData:
      type: object
      properties:
        users:
          type: integer
          description: Cantidad de usuarios a generar
          minimum: 1
        pets:
          type: integer
          description: Cantidad de mascotas a generar
          minimum: 1
      example:
        users: 5
        pets: 10

  responses:
    Success:
      description: Operación exitosa
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              payload:
                type: object

    Error:
      description: Error en la operación
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              error:
                type: string
                example: Mensaje de error

    ValidationError:
      description: Error de validación
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              error:
                type: string
                example: Error de validación